FROM node:10-alpine

RUN apk add --update --no-cache bash curl git openssh-client g++ gcc libgcc libstdc++ linux-headers make python3 coreutils openssl gnupg tar tzdata && \
  npm install --quiet node-gyp -g

RUN cp /usr/share/zoneinfo/Europe/Brussels /etc/localtime && \
    echo "Europe/Brussels" >  /etc/timezone && \
    apk del tzdata

# # Docker
ENV DAEMON_VERSION="0.6.13" \
    UID=500 \
    DOCKER_VERSION="19.03.12"

RUN curl -L -o /tmp/docker-$DOCKER_VERSION.tgz https://download.docker.com/linux/static/stable/x86_64/docker-$DOCKER_VERSION.tgz \
    && tar -xz -C /tmp -f /tmp/docker-$DOCKER_VERSION.tgz \
    && mv /tmp/docker/docker /usr/bin \
    && rm -rf /tmp/docker-$DOCKER_VERSION /tmp/docker

# VOLUME /var/run/docker.sock

WORKDIR /srv/daemon

# pterodactyl daemon
RUN \
 curl -Lo daemon.tar.gz https://github.com/pterodactyl/daemon/releases/download/v${DAEMON_VERSION}/daemon.tar.gz \
 && tar --strip-components=1 -xzvf daemon.tar.gz \
 && rm -f daemon.tar.gz \
 && npm install --production \
 && addgroup -S -g ${UID} pterodactyl && adduser -S -D -H -G pterodactyl -u ${UID} -s /bin/false pterodactyl \
 && apk del curl make gcc g++ python3 gnupg \
 && rm -rf /root/.npm /root/.node-gyp /root/.gnupg \
 /var/cache/apk/* /tmp/*

CMD ["npm", "start"]